// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserSession UserSession[]
  Tasks       Task[]
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique @db.Text
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

enum TaskStatus {
  PLANNED
  TO_DO
  IN_PROGRESS
  DONE
  CANCELED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model Task {
  id          String        @id @default(cuid())
  title       String
  description String?
  status      TaskStatus?   @default(PLANNED)
  priority    TaskPriority? @default(MEDIUM)
  dueDate     DateTime?
  parentId    String?
  parent      Task?         @relation("Subtasks", fields: [parentId], references: [id], onDelete: Cascade)
  subtasks    Task[]        @relation("Subtasks")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}
